<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconKeys="clr-namespace:ProgrammingLanguage.Client.Resources.Icons">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../../../Fonts/Fonts.xaml"/>
        <ResourceDictionary Source="../../DataTemplates/ButtonDataTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Type ButtonBase}" TargetType="ButtonBase">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="FontFamily" Value="{StaticResource AppFont}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="ToolTipService.Placement" Value="Mouse"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="True"/>
    </Style>

    <Style x:Key="Style_Button_Primary" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="ContentTemplate" Value="{StaticResource DTemplate_Button_Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource MainLightBrush}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd_Main" 
                            SnapsToDevicePixels="True"
                            CornerRadius="8" BorderThickness="1"
                            Background="{DynamicResource PrimaryBrush}"
                            Effect="{DynamicResource Effect_Button_ShadowBase}">
                        <Grid x:Name="grd_Main"
                              Margin="8">
                            <ContentPresenter Margin="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=PrimaryDarkBrush50}"/>
                            <Setter TargetName="brd_Main" Property="BorderBrush" Value="{DynamicResource ResourceKey=PrimaryDarkBrush50}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=PrimaryLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=SecondaryDarkBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="Style_Button_PrimaryWithImage" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="ContentTemplate" Value="{StaticResource DTemplate_Button_BaseWithImage}" />
        <Setter Property="Foreground" Value="{DynamicResource MainLightBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="brd_Main" 
                            SnapsToDevicePixels="True"
                            CornerRadius="8" BorderThickness="1"
                            BorderBrush="{TemplateBinding Background}"
                            Background="{TemplateBinding Background}"
                            Effect="{DynamicResource Effect_Button_ShadowBase}">
                        <Grid x:Name="grd_Main"
                              Margin="0">
                            <ContentPresenter x:Name="cnt_ContentPresenter" 
                                              Margin="16"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="cnt_ContentPresenter" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter TargetName="cnt_ContentPresenter" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=PrimaryDarkBrush50}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                            <Setter TargetName="brd_Main" Property="BorderBrush" Value="{DynamicResource ResourceKey=PrimaryDarkBrush50}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=PrimaryLightBrush}"/>
                            <Setter TargetName="brd_Main" Property="BorderBrush" Value="{DynamicResource ResourceKey=PrimaryLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=SecondaryDarkBrush}"/>
                            <Setter TargetName="brd_Main" Property="BorderBrush" Value="{DynamicResource ResourceKey=SecondaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_Button_PrimaryWithImageWithoutText" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="ContentTemplate" Value="{StaticResource DTemplate_Button_BaseWithImageWithoutText}" />
        <Setter Property="Background" Value="{DynamicResource MainTransparentBrush}"/>
        <Setter Property="MinWidth" Value="24"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Foreground" Value="{DynamicResource MainLightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid x:Name="grd_Main"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="cnt_ContentPresenter" 
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_Button_CloseWindow" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="ContentTemplate" Value="{StaticResource DTemplate_Button_BaseWithImageWithoutText}"/>
        <Setter Property="Background" Value="{DynamicResource MainTransparentBrush}"/>
        <Setter Property="MinWidth" Value="24"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Foreground" Value="{DynamicResource MainLightBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="brd_Main" 
                            SnapsToDevicePixels="True"
                            CornerRadius="4"
                            Background="{TemplateBinding Background}">
                        <Grid x:Name="grd_Main"
                              Margin="0">
                            <ContentPresenter x:Name="cnt_ContentPresenter" 
                                              Margin="0 1 0 0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DangerBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryDarkBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="Style_ToggleButton_ComboBoxArrow" TargetType="ToggleButton">
        <Setter Property="Margin" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource MainTransparentBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainLightBrush}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource DTemplate_ToggleButton_ComboBoxExpander}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center"
                                          Margin="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="Style_Button_DataGridSelectAll" TargetType="Button">
        <Setter Property="Content" Value="#"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{DynamicResource MainLightBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="8 2 0 0"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_Button_ArrowButton" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource MainTransparentBrush}" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource MainLightBrush}" />
        <Setter Property="Tag" Value="{x:Static iconKeys:IconKey.ArrowDownSmall}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border
                        x:Name="brd_Main"
                        Background="{TemplateBinding Background}"
                        CornerRadius="24">
                        <Grid>
                            <Label
                                Height="22"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource Style_Label_ImageBase}"
                                Tag="{TemplateBinding Tag}" />
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Tag" Value="{x:Static iconKeys:IconKey.ArrowUpSmall}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="Style_Button_Special" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryDarkBrush}"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd_Main" 
                            SnapsToDevicePixels="True"
                            CornerRadius="8" BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            Effect="{DynamicResource Effect_Button_ShadowBase}">
                        <Grid x:Name="grd_Main"
                              Margin="8 10 8 8">
                            <ContentPresenter Margin="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=PrimaryDarkBrush50}"/>
                            <Setter TargetName="brd_Main" Property="BorderBrush" Value="{DynamicResource ResourceKey=PrimaryDarkBrush50}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=ButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="brd_Main" Property="Background" Value="{DynamicResource ResourceKey=SecondaryDarkBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>